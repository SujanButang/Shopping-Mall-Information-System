
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Sujan
 */
public class ShoppingMallInfo extends javax.swing.JFrame {

    ArrayList<Table> list = new ArrayList<Table>();
    public String parking;
    public String searchBy;

    /**
     * Creates new form ShoppingMallInfo
     */
    public ShoppingMallInfo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        txtContact = new javax.swing.JTextField();
        txtNumberOfFloors = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();
        lblLocation = new javax.swing.JLabel();
        comboCategory = new javax.swing.JComboBox<>();
        radioAvailable = new javax.swing.JRadioButton();
        lblContact = new javax.swing.JLabel();
        lblCategory = new javax.swing.JLabel();
        radioNotAvailable = new javax.swing.JRadioButton();
        lblParking = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        lblNumberOfFloors = new javax.swing.JLabel();
        txtLocation = new javax.swing.JTextField();
        lblID = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableInfo = new javax.swing.JTable();
        lblShoppingMallIS = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        txtSearchName = new javax.swing.JTextField();
        lblSearchBy = new javax.swing.JLabel();
        checkID = new javax.swing.JCheckBox();
        checkCategory = new javax.swing.JCheckBox();
        btnSearch = new javax.swing.JButton();
        lblSearchName = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuOpen = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        menuSetting = new javax.swing.JMenu();
        menuLogOut = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        lblName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblName.setText("Mall Name:");

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        lblLocation.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblLocation.setText("Location:");

        comboCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Regional", "Super Regional", "Local", "Multi National" }));
        comboCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCategoryActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioAvailable);
        radioAvailable.setText("Available");
        radioAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioAvailableActionPerformed(evt);
            }
        });

        lblContact.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblContact.setText("Contact:");

        lblCategory.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblCategory.setText("Category:");

        buttonGroup1.add(radioNotAvailable);
        radioNotAvailable.setText("Not Available");
        radioNotAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioNotAvailableActionPerformed(evt);
            }
        });

        lblParking.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblParking.setText("Parking:");

        btnAdd.setText("Add ");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        lblNumberOfFloors.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblNumberOfFloors.setText("Number of Floors:");

        lblID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblID.setText("Mall ID:");

        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNumberOfFloors)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNumberOfFloors)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 45, Short.MAX_VALUE)
                                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblLocation)
                            .addComponent(lblContact)
                            .addComponent(lblParking)
                            .addComponent(lblCategory)
                            .addComponent(lblID)
                            .addComponent(lblName, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtContact)
                            .addComponent(comboCategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(radioAvailable)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radioNotAvailable)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtName)
                            .addComponent(txtLocation)
                            .addComponent(txtID))))
                .addGap(21, 21, 21))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblID)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLocation)
                    .addComponent(txtLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblContact)
                    .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCategory)
                    .addComponent(comboCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioAvailable)
                    .addComponent(radioNotAvailable)
                    .addComponent(lblParking))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumberOfFloors)
                    .addComponent(txtNumberOfFloors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tableInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Location", "Contact", "Category", "Parking", "Number of Floors"
            }
        ));
        jScrollPane1.setViewportView(tableInfo);

        lblShoppingMallIS.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblShoppingMallIS.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblShoppingMallIS.setText("Shopping Mall Information System");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 855, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblShoppingMallIS, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(180, 180, 180))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(lblShoppingMallIS, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        lblSearchBy.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblSearchBy.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSearchBy.setText("Search By:");

        buttonGroup2.add(checkID);
        checkID.setText("Shopping Mall ID");
        checkID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkIDActionPerformed(evt);
            }
        });

        buttonGroup2.add(checkCategory);
        checkCategory.setText("Category");
        checkCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkCategoryActionPerformed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.setMaximumSize(new java.awt.Dimension(59, 25));
        btnSearch.setMinimumSize(new java.awt.Dimension(59, 25));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        lblSearchName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblSearchName.setText("ID / Category:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSearchBy, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSearchName, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(txtSearchName, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(checkID)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(checkCategory)))))
                .addGap(56, 56, 56))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSearchName))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSearchBy)
                    .addComponent(checkID)
                    .addComponent(checkCategory))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("File");

        menuOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        menuOpen.setText("Open");
        menuOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuOpenActionPerformed(evt);
            }
        });
        jMenu1.add(menuOpen);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        menuSetting.setText("Settings");

        menuLogOut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        menuLogOut.setText("Log Out");
        menuLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuLogOutActionPerformed(evt);
            }
        });
        menuSetting.add(menuLogOut);

        jMenuBar1.add(menuSetting);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void radioNotAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioNotAvailableActionPerformed
        parking = "Not Available";        // TODO add your handling code here:
    }//GEN-LAST:event_radioNotAvailableActionPerformed

    public int getId() {
        String id = txtID.getText();
        int idInt = -1;
        if (!id.equals("")) {
            try {
                idInt = Integer.parseInt(id);
            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(this, "Incorrect format for ID.\nEnter data in correct format.", "Incorrect Format!", 0);
            }
        }
        return idInt;
    }

    public Long getContact() {
        String contact = txtContact.getText();
        Long contactLong = Long.valueOf(-1);
        if (!contact.equals("")) {
            try {
                contactLong = Long.parseLong(contact);
            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(this, "Incorrect format for contact.\nEnter data in correct format.", "Incorrect Format!", 0);
            }
        }
        return contactLong;
    }

    public int getNumberOfFloors() {
        String numberOfFloors = txtNumberOfFloors.getText();
        int numberOfFloorsInt = -1;
        if (!numberOfFloors.equals("")) {
            try {
                numberOfFloorsInt = Integer.parseInt(numberOfFloors);
            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(this, "Incorrect format for number of floors.\nEnter data in correct format.", "Incorrect Format!", 0);
            }
        }
        return numberOfFloorsInt;
    }

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        int idInt = getId();
        String id = Integer.toString(idInt);
        String name = txtName.getText();
        String location = txtLocation.getText();
        String category = (String) comboCategory.getSelectedItem();
        Long contactLong = getContact();
        String contact = Long.toString(contactLong);
        int numberOfFloorsInt = getNumberOfFloors();
        String numberOfFloors = Integer.toString(numberOfFloorsInt);

        //String tutorialRoom = txtTutRoom.getText();
        int rowCount = tableInfo.getRowCount();
        int emptyRow = 0;
        String s = "";
        int i;
        DefaultTableModel dfm;
        dfm = (DefaultTableModel) tableInfo.getModel();
        String[] values = {id, name, location, contact, category, parking, numberOfFloors};

        if (id.isEmpty() || name.isEmpty() || location.isEmpty() || contact.isEmpty() || category.isEmpty() || parking.isEmpty() || numberOfFloors.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter all values.");
        }
        if (idInt == -1 || contactLong == -1) {
            JOptionPane.showMessageDialog(this, "Please enter all values in correct format.");
        } else {
            for (i = 0; i < rowCount; i++) {
                s = (String) tableInfo.getValueAt(i, 0);
                if (s.equals(id)) {
                    JOptionPane.showMessageDialog(this, "This shopping mall is already registered.");
                    return;
                }
            }
            dfm.addRow(values);
            Table td = new Table(id, name, location, contact, category, parking, numberOfFloors);
            list.add(td);
            loadCSV();
        }// TODO add your handling code here:
    }//GEN-LAST:event_btnAddActionPerformed

    public void loadCSV() {
        FileWriter fw = null;
        try {
            File f1 = new File("ShoppingMall_IS.csv");
            if (!f1.isFile()) {
                f1.createNewFile();
            }
            fw = new FileWriter(f1);
            for (Table td : list) {
                String value[] = {td.getStringID(), td.getName(), td.getLocation(), td.getStringContact(), td.getCategory(), td.getParking(), td.getStringNumberOfFloors()};
                for (int i = 0; i < value.length; i++) {
                    fw.append(value[i]);
                    if (i == value.length - 1) {
                        break;
                    }
                    fw.append(",");
                }
                fw.append("\n");
            }
            fw.flush();
            fw.close();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "IO Exception Occured!");
        }
    }
    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void comboCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboCategoryActionPerformed

    private void radioAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioAvailableActionPerformed
        parking = "Available";        // TODO add your handling code here:
    }//GEN-LAST:event_radioAvailableActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtName.setText("");
        txtID.setText("");
        txtLocation.setText("");
        txtContact.setText("");
        txtNumberOfFloors.setText("");
        buttonGroup1.clearSelection();// TODO add your handling code here:
    }//GEN-LAST:event_btnClearActionPerformed

    private void menuLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuLogOutActionPerformed
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to Log Out?", "Confirm", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            new Login().setVisible(true);
            this.setVisible(false);;// TODO add your handling code here:
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_menuLogOutActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        if (searchBy.equals("ID")) {
            for (int i = 0; i < list.size() - 1; i++) //to place the element in it's correct spot
            {
                int minPos = i;
                for (int j = i + 1; j < list.size(); j++) { //to go through the unsorted array inorder for us to find the smallest element
                    Table one = list.get(minPos);
                    Table second = list.get(j);
                    if (one.getID() > second.getID()) {
                        minPos = j;
                    }
                }
                Collections.swap(list, minPos, i);

            }
            addSortedData();
            String ID = txtSearchName.getText();
            int idInt = Integer.parseInt(ID);
            int index = binarySearch(list, 0, list.size() - 1, idInt);
            if (index == -1) {
                JOptionPane.showMessageDialog(this, "Sorry no items found.");
            } else {
                JOptionPane.showMessageDialog(this, list.get(index).toString());
            }
        }
        if (searchBy.equals("category")) {
            String searchCategory = txtSearchName.getText();
            int k = 0;
            String malls = "";
            for(int i=0; i<tableInfo.getRowCount(); i++){
                String value = (String)tableInfo.getValueAt(i,4);
                if(searchCategory.equals(value)){
                    String mall = String.valueOf(tableInfo.getValueAt(i,1));
                    k++;
                    malls += String.valueOf(k)+": "+mall +" \n"; 
                }
            }
        if(malls.length()==0){
            JOptionPane.showMessageDialog(this,"No shopping malls of this category found.");
        }
        else{
            JOptionPane.showMessageDialog(this,"The shopping malls of this category are \n"+malls);
        }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    public static int binarySearch(ArrayList<Table> list, int low, int high, int idInt) {
        if (low <= high) {
            int mid = (low + high) / 2;
            if (list.get(mid).getID() == idInt) {
                return mid;
            } else if (list.get(mid).getID() > idInt) {
                return binarySearch(list, low, mid - 1, idInt);
            } else {
                return binarySearch(list, mid + 1, high, idInt);
            }
        } else {
            return -1;
        }
    }

    public void addSortedData() {
        DefaultTableModel dtm = (DefaultTableModel) tableInfo.getModel();
        dtm.setRowCount(0);
        for (Table td : list) {
            String values[] = {td.getStringID(), td.getName(), td.getLocation(), td.getStringContact(), td.getCategory(), td.getParking(), td.getStringNumberOfFloors()};
            dtm.addRow(values);
        }
    }

    private void checkIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkIDActionPerformed
        searchBy = "ID";        // TODO add your handling code here:
    }//GEN-LAST:event_checkIDActionPerformed

    private void checkCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkCategoryActionPerformed
        searchBy = "category";        // TODO add your handling code here:
    }//GEN-LAST:event_checkCategoryActionPerformed

    private void menuOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuOpenActionPerformed
        readCSV();        // TODO add your handling code here:
    }//GEN-LAST:event_menuOpenActionPerformed
    
    private void readCSV(){
        try{
            BufferedReader bffr = new BufferedReader(new FileReader("ShoppingMall_IS.csv"));
            String row ="";
            while ((row = bffr.readLine())!=null){
                String [] values = row.split(",");
                String id = values[0];
                String name = values[1];
                String location = values[2];
                String contact = values[3];
                String category = values[4];
                String parking = values[5];
                String numberOfFloors = values[6];
                DefaultTableModel dtm = (DefaultTableModel)tableInfo.getModel();
                dtm.addRow(values);
                Table td = new Table(id, name, location, contact, category, parking, numberOfFloors);
            list.add(td);
            
            }
        }catch(FileNotFoundException ex){
            JOptionPane.showMessageDialog(this,"File not found!");
            
        }catch(IOException ex){
            JOptionPane.showMessageDialog(this,"IO Exception occured!");
        }
        JOptionPane.showMessageDialog(this,"File opened successfully.");
       
                
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShoppingMallInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShoppingMallInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShoppingMallInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShoppingMallInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShoppingMallInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnSearch;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JCheckBox checkCategory;
    private javax.swing.JCheckBox checkID;
    private javax.swing.JComboBox<String> comboCategory;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCategory;
    private javax.swing.JLabel lblContact;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblLocation;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNumberOfFloors;
    private javax.swing.JLabel lblParking;
    private javax.swing.JLabel lblSearchBy;
    private javax.swing.JLabel lblSearchName;
    private javax.swing.JLabel lblShoppingMallIS;
    private javax.swing.JMenuItem menuLogOut;
    private javax.swing.JMenuItem menuOpen;
    private javax.swing.JMenu menuSetting;
    private javax.swing.JRadioButton radioAvailable;
    private javax.swing.JRadioButton radioNotAvailable;
    private javax.swing.JTable tableInfo;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtLocation;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNumberOfFloors;
    private javax.swing.JTextField txtSearchName;
    // End of variables declaration//GEN-END:variables
}
